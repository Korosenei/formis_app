# Generated by Django 5.2.6 on 2025-09-27 00:17

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic', '0002_initial'),
        ('enrollment', '0001_initial'),
        ('establishments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InscriptionPaiement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('type_paiement', models.CharField(choices=[('UNIQUE', 'Paiement unique'), ('ECHELONNE', 'Paiement échelonné')], max_length=20, verbose_name='Type de paiement choisi')),
                ('montant_total_du', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant total dû')),
                ('montant_total_paye', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Montant total payé')),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('PARTIEL', 'Partiel'), ('COMPLET', 'Complet'), ('EN_RETARD', 'En retard')], default='EN_ATTENTE', max_length=20, verbose_name='Statut')),
                ('date_premier_paiement', models.DateTimeField(blank=True, null=True, verbose_name='Date du premier paiement')),
                ('date_solde', models.DateTimeField(blank=True, null=True, verbose_name='Date de solde')),
                ('inscription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='plan_paiement_inscription', to='enrollment.inscription', verbose_name='Inscription')),
            ],
            options={
                'verbose_name': "Paiement d'inscription",
                'verbose_name_plural': "Paiements d'inscriptions",
                'db_table': 'payments_inscription_paiement',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_transaction', models.CharField(max_length=50, unique=True, verbose_name='Numéro de transaction')),
                ('reference_externe', models.CharField(blank=True, max_length=100, null=True, verbose_name='Référence externe (LigdiCash)')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant')),
                ('frais_transaction', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Frais de transaction')),
                ('montant_net', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant net reçu')),
                ('methode_paiement', models.CharField(choices=[('LIGDICASH', 'LigdiCash'), ('ESPECES', 'Espèces'), ('CHEQUE', 'Chèque'), ('VIREMENT', 'Virement bancaire'), ('AUTRE', 'Autre')], default='LIGDICASH', max_length=20, verbose_name='Méthode de paiement')),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('EN_COURS', 'En cours de traitement'), ('CONFIRME', 'Confirmé'), ('ECHEC', 'Échec'), ('ANNULE', 'Annulé'), ('REMBOURSE', 'Remboursé')], default='EN_ATTENTE', max_length=20, verbose_name='Statut')),
                ('date_paiement', models.DateTimeField(auto_now_add=True, verbose_name='Date de paiement')),
                ('date_confirmation', models.DateTimeField(blank=True, null=True, verbose_name='Date de confirmation')),
                ('date_echeance', models.DateField(blank=True, null=True, verbose_name="Date d'échéance")),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('notes_admin', models.TextField(blank=True, null=True, verbose_name='Notes administratives')),
                ('donnees_transaction', models.JSONField(blank=True, default=dict, verbose_name='Données de transaction')),
                ('inscription_paiement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='payments.inscriptionpaiement', verbose_name="Plan de paiement d'inscription")),
                ('traite_par', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['ADMIN', 'CHEF_DEPARTEMENT']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_traites', to=settings.AUTH_USER_MODEL, verbose_name='Traité par')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'db_table': 'payments_paiement',
                'ordering': ['-date_paiement'],
            },
        ),
        migrations.CreateModel(
            name='HistoriquePaiement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('type_action', models.CharField(choices=[('CREATION', 'Création'), ('MODIFICATION', 'Modification'), ('CONFIRMATION', 'Confirmation'), ('ECHEC', 'Échec'), ('ANNULATION', 'Annulation'), ('REMBOURSEMENT', 'Remboursement')], max_length=20, verbose_name="Type d'action")),
                ('ancien_statut', models.CharField(blank=True, max_length=20, null=True, verbose_name='Ancien statut')),
                ('nouveau_statut', models.CharField(blank=True, max_length=20, null=True, verbose_name='Nouveau statut')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Détails')),
                ('donnees_supplementaires', models.JSONField(blank=True, default=dict, verbose_name='Données supplémentaires')),
                ('adresse_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('paiement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique', to='payments.paiement', verbose_name='Paiement')),
            ],
            options={
                'verbose_name': 'Historique de paiement',
                'verbose_name_plural': 'Historiques de paiements',
                'db_table': 'payments_historique_paiement',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlanPaiement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom du plan')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant total')),
                ('paiement_unique_possible', models.BooleanField(default=True, verbose_name='Paiement unique autorisé')),
                ('paiement_echelonne_possible', models.BooleanField(default=True, verbose_name='Paiement échelonné autorisé')),
                ('remise_paiement_unique', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Remise paiement unique (%)')),
                ('frais_echelonnement', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name="Frais d'échelonnement")),
                ('est_actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.anneeacademique', verbose_name='Année académique')),
                ('cree_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plans_crees', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('filiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans_paiement', to='academic.filiere', verbose_name='Filière')),
                ('niveau', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plans_paiement', to='academic.niveau', verbose_name='Niveau (optionnel)')),
            ],
            options={
                'verbose_name': 'Plan de paiement',
                'verbose_name_plural': 'Plans de paiement',
                'db_table': 'payments_plan_paiement',
                'ordering': ['filiere__nom', 'niveau__nom'],
                'unique_together': {('filiere', 'niveau', 'annee_academique')},
            },
        ),
        migrations.AddField(
            model_name='inscriptionpaiement',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscriptions', to='payments.planpaiement', verbose_name='Plan de paiement'),
        ),
        migrations.CreateModel(
            name='RemboursementPaiement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('montant_rembourse', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant remboursé')),
                ('motif', models.TextField(verbose_name='Motif du remboursement')),
                ('statut', models.CharField(choices=[('DEMANDE', 'Demandé'), ('APPROUVE', 'Approuvé'), ('TRAITE', 'Traité'), ('REJETE', 'Rejeté')], default='DEMANDE', max_length=20, verbose_name='Statut')),
                ('date_demande', models.DateTimeField(auto_now_add=True, verbose_name='Date de demande')),
                ('date_traitement', models.DateTimeField(blank=True, null=True, verbose_name='Date de traitement')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('demande_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='remboursements_demandes', to=settings.AUTH_USER_MODEL, verbose_name='Demandé par')),
                ('paiement_original', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='remboursement', to='payments.paiement', verbose_name='Paiement original')),
                ('traite_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='remboursements_traites', to=settings.AUTH_USER_MODEL, verbose_name='Traité par')),
            ],
            options={
                'verbose_name': 'Remboursement',
                'verbose_name_plural': 'Remboursements',
                'db_table': 'payments_remboursement_paiement',
                'ordering': ['-date_demande'],
            },
        ),
        migrations.CreateModel(
            name='TranchePaiement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('numero', models.IntegerField(verbose_name='Numéro de tranche')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de la tranche')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant')),
                ('date_limite', models.DateField(blank=True, null=True, verbose_name='Date limite de paiement')),
                ('est_premiere_tranche', models.BooleanField(default=False, verbose_name='Première tranche (obligatoire pour inscription)')),
                ('penalite_retard', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Pénalité de retard (%)')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tranches', to='payments.planpaiement', verbose_name='Plan de paiement')),
            ],
            options={
                'verbose_name': 'Tranche de paiement',
                'verbose_name_plural': 'Tranches de paiement',
                'db_table': 'payments_tranche_paiement',
                'ordering': ['plan', 'numero'],
                'unique_together': {('plan', 'numero')},
            },
        ),
        migrations.AddField(
            model_name='paiement',
            name='tranche',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='payments.tranchepaiement', verbose_name='Tranche (si applicable)'),
        ),
        migrations.AddIndex(
            model_name='paiement',
            index=models.Index(fields=['statut', 'date_paiement'], name='payments_pa_statut_30d063_idx'),
        ),
        migrations.AddIndex(
            model_name='paiement',
            index=models.Index(fields=['inscription_paiement', 'statut'], name='payments_pa_inscrip_cd480e_idx'),
        ),
        migrations.AddIndex(
            model_name='paiement',
            index=models.Index(fields=['reference_externe'], name='payments_pa_referen_332151_idx'),
        ),
    ]
