# Generated by Django 5.2.6 on 2025-09-26 03:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic', '0002_initial'),
        ('courses', '0001_initial'),
        ('establishments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('titre', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('type_evaluation', models.CharField(choices=[('DEVOIR', 'Devoir'), ('COMPOSITION', 'Composition'), ('TP', 'Travaux Pratiques'), ('PROJET', 'Projet'), ('EXAMEN', 'Examen'), ('QUIZ', 'Quiz')], default='DEVOIR', max_length=15, verbose_name="Type d'évaluation")),
                ('coefficient', models.DecimalField(decimal_places=2, default=1.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='Coefficient')),
                ('note_maximale', models.DecimalField(decimal_places=2, default=20.0, max_digits=5, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Note maximale')),
                ('date_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date et heure de début')),
                ('date_fin', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date et heure de fin')),
                ('duree_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Durée en minutes')),
                ('fichier_evaluation', models.FileField(default='evaluations/default.pdf', upload_to='evaluations/sujets/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt'])], verbose_name="Fichier d'évaluation")),
                ('fichier_correction', models.FileField(blank=True, null=True, upload_to='evaluations/corrections/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt'])], verbose_name='Fichier de correction')),
                ('correction_visible_immediatement', models.BooleanField(default=False, verbose_name="Correction visible immédiatement après l'évaluation")),
                ('date_publication_correction', models.DateTimeField(blank=True, null=True, verbose_name='Date de publication de la correction')),
                ('autorise_retard', models.BooleanField(default=False, verbose_name='Autoriser les soumissions en retard')),
                ('penalite_retard', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Pénalité de retard (%)')),
                ('statut', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('PROGRAMMEE', 'Programmée'), ('EN_COURS', 'En cours'), ('TERMINEE', 'Terminée'), ('ANNULEE', 'Annulée')], default='BROUILLON', max_length=15, verbose_name='Statut')),
                ('classes', models.ManyToManyField(related_name='evaluations', to='academic.classe', verbose_name='Classes concernées')),
                ('enseignant', models.ForeignKey(limit_choices_to={'role': 'ENSEIGNANT'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluations_creees', to=settings.AUTH_USER_MODEL, verbose_name='Enseignant')),
                ('matiere_module', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='courses.matieremodule', verbose_name='Matière du module')),
            ],
            options={
                'verbose_name': 'Évaluation',
                'verbose_name_plural': 'Évaluations',
                'db_table': 'evaluation_evaluation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FichierComposition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom_original', models.CharField(max_length=255, verbose_name='Nom original')),
                ('fichier', models.FileField(upload_to='evaluations/compositions/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt', 'jpg', 'jpeg', 'png'])], verbose_name='Fichier')),
                ('taille', models.PositiveIntegerField(verbose_name='Taille (bytes)')),
                ('type_mime', models.CharField(max_length=100, verbose_name='Type MIME')),
                ('uploade_par', models.ForeignKey(limit_choices_to={'role': 'APPRENANT'}, on_delete=django.db.models.deletion.CASCADE, related_name='fichiers_composition', to=settings.AUTH_USER_MODEL, verbose_name='Uploadé par')),
            ],
            options={
                'verbose_name': 'Fichier de composition',
                'verbose_name_plural': 'Fichiers de composition',
                'db_table': 'evaluation_fichier_composition',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('date_debut', models.DateTimeField(auto_now_add=True, verbose_name='Date de début')),
                ('date_soumission', models.DateTimeField(blank=True, null=True, verbose_name='Date de soumission')),
                ('note_obtenue', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Note obtenue')),
                ('commentaire_correction', models.TextField(blank=True, null=True, verbose_name='Commentaire de correction')),
                ('fichier_correction_personnalise', models.FileField(blank=True, null=True, upload_to='evaluations/corrections_personnalisees/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt'])], verbose_name='Correction personnalisée')),
                ('statut', models.CharField(choices=[('EN_COURS', 'En cours'), ('SOUMISE', 'Soumise'), ('EN_RETARD', 'En retard'), ('CORRIGEE', 'Corrigée')], default='EN_COURS', max_length=15, verbose_name='Statut')),
                ('date_correction', models.DateTimeField(blank=True, null=True, verbose_name='Date de correction')),
                ('apprenant', models.ForeignKey(limit_choices_to={'role': 'APPRENANT'}, on_delete=django.db.models.deletion.CASCADE, related_name='compositions', to=settings.AUTH_USER_MODEL, verbose_name='Apprenant')),
                ('corrigee_par', models.ForeignKey(blank=True, limit_choices_to={'role': 'ENSEIGNANT'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compositions_corrigees', to=settings.AUTH_USER_MODEL, verbose_name='Corrigée par')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compositions', to='evaluations.evaluation', verbose_name='Évaluation')),
                ('fichiers_composition', models.ManyToManyField(blank=True, related_name='compositions', to='evaluations.fichiercomposition', verbose_name='Fichiers de composition')),
            ],
            options={
                'verbose_name': 'Composition',
                'verbose_name_plural': 'Compositions',
                'db_table': 'evaluation_composition',
                'ordering': ['-created_at'],
                'unique_together': {('evaluation', 'apprenant')},
            },
        ),
        migrations.CreateModel(
            name='MoyenneModule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('moyenne_generale', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Moyenne générale')),
                ('total_credits', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Total crédits')),
                ('validee', models.BooleanField(default=False, verbose_name='Validée')),
                ('date_validation', models.DateTimeField(blank=True, null=True, verbose_name='Date de validation')),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moyennes_modules', to='establishments.anneeacademique', verbose_name='Année académique')),
                ('apprenant', models.ForeignKey(limit_choices_to={'role': 'APPRENANT'}, on_delete=django.db.models.deletion.CASCADE, related_name='moyennes_modules', to=settings.AUTH_USER_MODEL, verbose_name='Apprenant')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moyennes', to='courses.module', verbose_name='Module')),
            ],
            options={
                'verbose_name': 'Moyenne de module',
                'verbose_name_plural': 'Moyennes de modules',
                'db_table': 'evaluation_moyenne_module',
                'ordering': ['-created_at'],
                'unique_together': {('apprenant', 'module', 'annee_academique')},
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('valeur', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Valeur')),
                ('note_sur', models.DecimalField(decimal_places=2, default=20.0, max_digits=5, verbose_name='Note sur')),
                ('date_attribution', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'attribution")),
                ('commentaire', models.TextField(blank=True, null=True, verbose_name='Commentaire')),
                ('apprenant', models.ForeignKey(limit_choices_to={'role': 'APPRENANT'}, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL, verbose_name='Apprenant')),
                ('attribuee_par', models.ForeignKey(blank=True, limit_choices_to={'role': 'ENSEIGNANT'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes_attribuees', to=settings.AUTH_USER_MODEL, verbose_name='Attribuée par')),
                ('composition', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='note', to='evaluations.composition', verbose_name='Composition')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='evaluations.evaluation', verbose_name='Évaluation')),
                ('matiere_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='courses.matieremodule', verbose_name='Matière du module')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'db_table': 'evaluation_note',
                'ordering': ['-date_attribution'],
                'unique_together': {('apprenant', 'evaluation')},
            },
        ),
    ]
