# Generated by Django 5.2.6 on 2025-09-24 23:20

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom')),
                ('sigle', models.CharField(blank=True, max_length=20, null=True, verbose_name='Sigle')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Code')),
                ('adresse', models.TextField(verbose_name='Adresse')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('site_web', models.URLField(blank=True, null=True, verbose_name='Site web')),
                ('nom_directeur', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nom du directeur')),
                ('numero_enregistrement', models.CharField(blank=True, max_length=50, null=True, verbose_name="Numéro d'enregistrement")),
                ('date_creation', models.DateField(blank=True, null=True, verbose_name='Date de création')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='etablissements/logos/', verbose_name='Logo')),
                ('image_couverture', models.ImageField(blank=True, null=True, upload_to='etablissements/couvertures/', verbose_name='Image de couverture')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('mission', models.TextField(blank=True, null=True, verbose_name='Mission')),
                ('vision', models.TextField(blank=True, null=True, verbose_name='Vision')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('public', models.BooleanField(default=True, verbose_name='Visible au public')),
                ('capacite_totale', models.IntegerField(default=0, verbose_name='Capacité totale')),
                ('etudiants_actuels', models.IntegerField(default=0, verbose_name='Étudiants actuels')),
            ],
            options={
                'verbose_name': 'Établissement',
                'verbose_name_plural': 'Établissements',
                'db_table': 'establishments_etablissement',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Localite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Région')),
                ('pays', models.CharField(default='Burkina Faso', max_length=100, verbose_name='Pays')),
                ('code_postal', models.CharField(blank=True, max_length=10, null=True, verbose_name='Code postal')),
            ],
            options={
                'verbose_name': 'Localité',
                'verbose_name_plural': 'Localités',
                'db_table': 'establishments_localite',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='TypeEtablissement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('structure_academique_defaut', models.CharField(choices=[('SEMESTRE', 'Semestre'), ('TRIMESTRE', 'Trimestre'), ('QUADRIMESTRE', 'Quadrimestre')], default='SEMESTRE', max_length=20, verbose_name='Structure académique par défaut')),
                ('icone', models.CharField(default='fas fa-building', max_length=50, verbose_name='Icône FontAwesome')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': "Type d'établissement",
                'verbose_name_plural': "Types d'établissements",
                'db_table': 'establishments_type_etablissement',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='BaremeNotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('note_minimale', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Note minimale')),
                ('note_maximale', models.DecimalField(decimal_places=2, default=20, max_digits=5, verbose_name='Note maximale')),
                ('note_passage', models.DecimalField(decimal_places=2, default=10, max_digits=5, verbose_name='Note de passage')),
                ('est_defaut', models.BooleanField(default=False, verbose_name='Par défaut')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.etablissement', verbose_name='Établissement')),
            ],
            options={
                'verbose_name': 'Barème de notation',
                'verbose_name_plural': 'Barèmes de notation',
                'db_table': 'establishments_bareme_notation',
                'ordering': ['etablissement', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='JourFerie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(verbose_name='Date de fin')),
                ('type_jour_ferie', models.CharField(choices=[('PUBLIC', 'Jour férié public'), ('RELIGIEUX', 'Fête religieuse'), ('SCOLAIRE', 'Vacances scolaires'), ('EXAMEN', "Période d'examens"), ('PAUSE', 'Pause pédagogique'), ('MAINTENANCE', 'Maintenance'), ('AUTRE', 'Autre')], max_length=20, verbose_name='Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('est_recurrent', models.BooleanField(default=False, verbose_name='Récurrent')),
                ('modele_recurrence', models.CharField(blank=True, choices=[('ANNUEL', 'Annuel'), ('MENSUEL', 'Mensuel'), ('HEBDOMADAIRE', 'Hebdomadaire')], max_length=20, null=True, verbose_name='Modèle de récurrence')),
                ('affecte_cours', models.BooleanField(default=True, verbose_name='Affecte les cours')),
                ('affecte_examens', models.BooleanField(default=True, verbose_name='Affecte les examens')),
                ('affecte_inscriptions', models.BooleanField(default=False, verbose_name='Affecte les inscriptions')),
                ('couleur', models.CharField(default='#dc3545', max_length=7, verbose_name='Couleur')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.etablissement', verbose_name='Établissement')),
            ],
            options={
                'verbose_name': 'Jour férié/Vacances',
                'verbose_name_plural': 'Jours fériés/Vacances',
                'db_table': 'establishments_jour_ferie',
                'ordering': ['date_debut'],
            },
        ),
        migrations.AddField(
            model_name='etablissement',
            name='localite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.localite', verbose_name='Localité'),
        ),
        migrations.CreateModel(
            name='NiveauNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=50, verbose_name='Nom')),
                ('note_minimale', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Note minimale')),
                ('note_maximale', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Note maximale')),
                ('couleur', models.CharField(default='#000000', max_length=7, verbose_name='Couleur')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('points_gpa', models.DecimalField(decimal_places=2, default=0, max_digits=4, verbose_name='Points GPA')),
                ('bareme_notation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='niveaux_notes', to='establishments.baremenotation', verbose_name='Barème')),
            ],
            options={
                'verbose_name': 'Niveau de note',
                'verbose_name_plural': 'Niveaux de notes',
                'db_table': 'establishments_niveau_note',
                'ordering': ['-note_minimale'],
            },
        ),
        migrations.CreateModel(
            name='ParametresEtablissement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('structure_academique', models.CharField(choices=[('SEMESTRE', 'Semestre'), ('TRIMESTRE', 'Trimestre'), ('QUADRIMESTRE', 'Quadrimestre')], default='SEMESTRE', max_length=20, verbose_name='Structure académique')),
                ('frais_dossier_requis', models.BooleanField(default=False, verbose_name='Frais de dossier requis')),
                ('montant_frais_dossier', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant des frais de dossier')),
                ('date_limite_inscription_anticipée', models.DateField(blank=True, null=True, verbose_name='Date limite inscription anticipée')),
                ('date_limite_inscription_normale', models.DateField(blank=True, null=True, verbose_name='Date limite inscription normale')),
                ('date_limite_inscription_tardive', models.DateField(blank=True, null=True, verbose_name='Date limite inscription tardive')),
                ('paiement_echelonne_autorise', models.BooleanField(default=True, verbose_name='Paiement échelonné autorisé')),
                ('nombre_maximum_tranches', models.IntegerField(default=3, verbose_name='Nombre maximum de tranches')),
                ('frais_echelonnement', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name="Frais d'échelonnement")),
                ('taux_penalite_retard', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taux de pénalité de retard (%)')),
                ('taux_presence_minimum', models.DecimalField(decimal_places=2, default=75.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Taux de présence minimum (%)')),
                ('points_bonus_autorises', models.BooleanField(default=False, verbose_name='Points bonus autorisés')),
                ('points_bonus_maximum', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Points bonus maximum')),
                ('notifications_sms', models.BooleanField(default=False, verbose_name='Notifications SMS')),
                ('notifications_email', models.BooleanField(default=True, verbose_name='Notifications email')),
                ('jours_avant_reset_mot_de_passe', models.IntegerField(default=90, verbose_name='Jours avant reset mot de passe obligatoire')),
                ('tentatives_connexion_max', models.IntegerField(default=5, verbose_name='Tentatives de connexion max')),
                ('examens_rattrapage_autorises', models.BooleanField(default=True, verbose_name='Examens de rattrapage autorisés')),
                ('frais_examen_rattrapage', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name="Frais d'examen de rattrapage")),
                ('couleur_primaire', models.CharField(default='#007bff', max_length=7, verbose_name='Couleur primaire')),
                ('couleur_secondaire', models.CharField(default='#6c757d', max_length=7, verbose_name='Couleur secondaire')),
                ('bareme_notation_defaut', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='establishments.baremenotation', verbose_name='Barème par défaut')),
                ('etablissement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parametres', to='establishments.etablissement', verbose_name='Établissement')),
            ],
            options={
                'verbose_name': "Paramètres d'établissement",
                'verbose_name_plural': "Paramètres d'établissements",
                'db_table': 'establishments_parametres',
            },
        ),
        migrations.AddField(
            model_name='etablissement',
            name='type_etablissement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.typeetablissement', verbose_name="Type d'établissement"),
        ),
        migrations.CreateModel(
            name='AnneeAcademique',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=20, verbose_name='Nom')),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(verbose_name='Date de fin')),
                ('debut_inscriptions', models.DateField(blank=True, null=True, verbose_name='Début des inscriptions')),
                ('fin_inscriptions', models.DateField(blank=True, null=True, verbose_name='Fin des inscriptions')),
                ('debut_cours', models.DateField(blank=True, null=True, verbose_name='Début des cours')),
                ('fin_cours', models.DateField(blank=True, null=True, verbose_name='Fin des cours')),
                ('debut_examens_premier_semestre', models.DateField(blank=True, null=True, verbose_name='Début examens 1er semestre')),
                ('fin_examens_premier_semestre', models.DateField(blank=True, null=True, verbose_name='Fin examens 1er semestre')),
                ('debut_examens_second_semestre', models.DateField(blank=True, null=True, verbose_name='Début examens 2nd semestre')),
                ('fin_examens_second_semestre', models.DateField(blank=True, null=True, verbose_name='Fin examens 2nd semestre')),
                ('debut_vacances_hiver', models.DateField(blank=True, null=True, verbose_name='Début vacances hiver')),
                ('fin_vacances_hiver', models.DateField(blank=True, null=True, verbose_name='Fin vacances hiver')),
                ('debut_vacances_ete', models.DateField(blank=True, null=True, verbose_name='Début vacances été')),
                ('fin_vacances_ete', models.DateField(blank=True, null=True, verbose_name='Fin vacances été')),
                ('est_courante', models.BooleanField(default=False, verbose_name='Année courante')),
                ('est_active', models.BooleanField(default=True, verbose_name='Active')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.etablissement', verbose_name='Établissement')),
            ],
            options={
                'verbose_name': 'Année académique',
                'verbose_name_plural': 'Années académiques',
                'db_table': 'establishments_annee_academique',
                'ordering': ['-date_debut'],
                'unique_together': {('etablissement', 'nom')},
            },
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('adresse', models.TextField(verbose_name='Adresse')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('superficie_totale', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Superficie totale (m²)')),
                ('bibliotheque', models.BooleanField(default=False, verbose_name='Bibliothèque')),
                ('cafeteria', models.BooleanField(default=False, verbose_name='Cafétéria')),
                ('parking', models.BooleanField(default=False, verbose_name='Parking')),
                ('internat', models.BooleanField(default=False, verbose_name='Internat')),
                ('installations_sportives', models.BooleanField(default=False, verbose_name='Installations sportives')),
                ('infirmerie', models.BooleanField(default=False, verbose_name='Infirmerie')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('est_campus_principal', models.BooleanField(default=False, verbose_name='Campus principal')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('responsable_campus', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['ADMIN', 'CHEF_DEPARTEMENT']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Responsable du campus')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campuses', to='establishments.etablissement', verbose_name='Établissement')),
                ('localite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='establishments.localite', verbose_name='Localité')),
            ],
            options={
                'verbose_name': 'Campus',
                'verbose_name_plural': 'Campus',
                'db_table': 'establishments_campus',
                'ordering': ['etablissement', 'nom'],
                'unique_together': {('etablissement', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('type_salle', models.CharField(choices=[('SALLE_CLASSE', 'Salle de classe'), ('LABORATOIRE', 'Laboratoire'), ('BIBLIOTHEQUE', 'Bibliothèque'), ('AMPHITHEATRE', 'Amphithéâtre'), ('SALLE_INFORMATIQUE', 'Salle informatique'), ('SALLE_CONFERENCE', 'Salle de conférence'), ('SALLE_SPORT', 'Salle de sport'), ('CAFETERIA', 'Cafétéria'), ('BUREAU', 'Bureau'), ('STOCKAGE', 'Stockage'), ('AUTRE', 'Autre')], default='SALLE_CLASSE', max_length=20, verbose_name='Type de salle')),
                ('capacite', models.IntegerField(verbose_name='Capacité')),
                ('etage', models.CharField(blank=True, max_length=20, null=True, verbose_name='Étage')),
                ('batiment', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bâtiment')),
                ('longueur', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Longueur (m)')),
                ('largeur', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Largeur (m)')),
                ('projecteur', models.BooleanField(default=False, verbose_name='Projecteur')),
                ('ordinateur', models.BooleanField(default=False, verbose_name='Ordinateur')),
                ('climatisation', models.BooleanField(default=False, verbose_name='Climatisation')),
                ('wifi', models.BooleanField(default=False, verbose_name='WiFi')),
                ('tableau_blanc', models.BooleanField(default=True, verbose_name='Tableau blanc')),
                ('systeme_audio', models.BooleanField(default=False, verbose_name='Système audio')),
                ('accessible_pmr', models.BooleanField(default=True, verbose_name='Accessible PMR')),
                ('etat', models.CharField(choices=[('EXCELLENT', 'Excellent'), ('BON', 'Bon'), ('CORRECT', 'Correct'), ('MAUVAIS', 'Mauvais'), ('MAINTENANCE', 'En maintenance')], default='BON', max_length=20, verbose_name='État')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('est_active', models.BooleanField(default=True, verbose_name='Active')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.etablissement', verbose_name='Établissement')),
            ],
            options={
                'verbose_name': 'Salle',
                'verbose_name_plural': 'Salles',
                'db_table': 'establishments_salle',
                'ordering': ['batiment', 'etage', 'nom'],
                'unique_together': {('etablissement', 'code')},
            },
        ),
    ]
