# Generated by Django 5.2.6 on 2025-09-24 23:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic', '0002_initial'),
        ('establishments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidature',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_candidature', models.CharField(max_length=20, unique=True, verbose_name='Numéro de candidature')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('date_naissance', models.DateField(verbose_name='Date de naissance')),
                ('lieu_naissance', models.CharField(max_length=100, verbose_name='Lieu de naissance')),
                ('genre', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1, verbose_name='Genre')),
                ('telephone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('adresse', models.TextField(verbose_name='Adresse')),
                ('nom_pere', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nom du père')),
                ('telephone_pere', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone du père')),
                ('nom_mere', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nom de la mère')),
                ('telephone_mere', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone de la mère')),
                ('nom_tuteur', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nom du tuteur')),
                ('telephone_tuteur', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone du tuteur')),
                ('ecole_precedente', models.CharField(blank=True, max_length=200, null=True, verbose_name='École précédente')),
                ('dernier_diplome', models.CharField(blank=True, max_length=200, null=True, verbose_name='Dernier diplôme')),
                ('annee_obtention', models.IntegerField(blank=True, null=True, verbose_name="Année d'obtention")),
                ('statut', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('SOUMISE', 'Soumise'), ('EN_COURS_EXAMEN', "En cours d'examen"), ('APPROUVEE', 'Approuvée'), ('REJETEE', 'Rejetée'), ('ANNULEE', 'Annulée'), ('EXPIREE', 'Expirée')], default='BROUILLON', max_length=20, verbose_name='Statut')),
                ('date_soumission', models.DateTimeField(blank=True, null=True, verbose_name='Date de soumission')),
                ('date_examen', models.DateTimeField(blank=True, null=True, verbose_name="Date d'examen")),
                ('date_decision', models.DateTimeField(blank=True, null=True, verbose_name='Date de décision')),
                ('motif_rejet', models.TextField(blank=True, null=True, verbose_name='Motif de rejet')),
                ('notes_approbation', models.TextField(blank=True, null=True, verbose_name="Notes d'approbation")),
                ('frais_dossier_requis', models.BooleanField(default=False, verbose_name='Frais de dossier requis')),
                ('montant_frais_dossier', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Montant des frais de dossier')),
                ('frais_dossier_payes', models.BooleanField(default=False, verbose_name='Frais de dossier payés')),
                ('date_paiement_frais', models.DateTimeField(blank=True, null=True, verbose_name='Date de paiement des frais')),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.anneeacademique', verbose_name='Année académique')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.etablissement', verbose_name='Établissement')),
                ('examine_par', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['ADMIN', 'CHEF_DEPARTMENT']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candidatures_examinees', to=settings.AUTH_USER_MODEL, verbose_name='Examiné par')),
                ('filiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.filiere', verbose_name='Filière')),
                ('niveau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.niveau', verbose_name='Niveau')),
            ],
            options={
                'verbose_name': 'Candidature',
                'verbose_name_plural': 'Candidatures',
                'db_table': 'enrollment_candidature',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentCandidature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('type_document', models.CharField(choices=[('PIECE_IDENTITE', "Pièce d'identité"), ('ACTE_NAISSANCE', 'Acte de naissance'), ('DIPLOME', 'Diplôme'), ('RELEVE_NOTES', 'Relevé de notes'), ('PHOTO_IDENTITE', "Photo d'identité"), ('CERTIFICAT_MEDICAL', 'Certificat médical'), ('JUSTIFICATIF_DOMICILE', 'Justificatif de domicile'), ('LETTRE_RECOMMANDATION', 'Lettre de recommandation'), ('LETTRE_MOTIVATION', 'Lettre de motivation'), ('CV', 'Curriculum Vitae'), ('AUTRE', 'Autre')], max_length=30, verbose_name='Type de document')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom du document')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('fichier', models.FileField(upload_to='candidature/documents/', verbose_name='Fichier')),
                ('taille_fichier', models.BigIntegerField(verbose_name='Taille du fichier')),
                ('format_fichier', models.CharField(max_length=10, verbose_name='Format du fichier')),
                ('est_valide', models.BooleanField(default=False, verbose_name='Validé')),
                ('date_validation', models.DateTimeField(blank=True, null=True, verbose_name='Date de validation')),
                ('notes_validation', models.TextField(blank=True, null=True, verbose_name='Notes de validation')),
                ('candidature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='enrollment.candidature', verbose_name='Candidature')),
                ('valide_par', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['ADMIN', 'CHEF_DEPARTMENT']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents_valides', to=settings.AUTH_USER_MODEL, verbose_name='Validé par')),
            ],
            options={
                'verbose_name': 'Document de candidature',
                'verbose_name_plural': 'Documents de candidature',
                'db_table': 'enrollment_document_candidature',
                'ordering': ['candidature', 'type_document'],
            },
        ),
        migrations.CreateModel(
            name='DocumentRequis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom du document')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('type_document', models.CharField(choices=[('PIECE_IDENTITE', "Pièce d'identité"), ('ACTE_NAISSANCE', 'Acte de naissance'), ('DIPLOME', 'Diplôme'), ('RELEVE_NOTES', 'Relevé de notes'), ('PHOTO_IDENTITE', "Photo d'identité"), ('CERTIFICAT_MEDICAL', 'Certificat médical'), ('JUSTIFICATIF_DOMICILE', 'Justificatif de domicile'), ('LETTRE_RECOMMANDATION', 'Lettre de recommandation'), ('LETTRE_MOTIVATION', 'Lettre de motivation'), ('CV', 'Curriculum Vitae'), ('AUTRE', 'Autre')], max_length=30, verbose_name='Type de document')),
                ('est_obligatoire', models.BooleanField(default=True, verbose_name='Obligatoire')),
                ('taille_maximale', models.IntegerField(default=5242880, verbose_name='Taille maximale (octets)')),
                ('formats_autorises', models.CharField(default='pdf,jpg,jpeg,png', help_text='Formats séparés par des virgules', max_length=100, verbose_name='Formats autorisés')),
                ('ordre_affichage', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('filiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_requis', to='academic.filiere', verbose_name='Filière')),
                ('niveau', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents_requis', to='academic.niveau', verbose_name='Niveau (optionnel)')),
            ],
            options={
                'verbose_name': 'Document requis',
                'verbose_name_plural': 'Documents requis',
                'db_table': 'enrollment_document_requis',
                'ordering': ['filiere', 'ordre_affichage', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_inscription', models.CharField(max_length=20, unique=True, verbose_name="Numéro d'inscription")),
                ('date_inscription', models.DateField(auto_now_add=True, verbose_name="Date d'inscription")),
                ('statut', models.CharField(choices=[('ACTIVE', 'Active'), ('SUSPENDED', 'Suspendue'), ('TRANSFERRED', 'Transférée'), ('WITHDRAWN', 'Abandonnée'), ('GRADUATED', 'Diplômé'), ('EXPELLED', 'Exclu')], default='ACTIVE', max_length=20, verbose_name='Statut')),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin_prevue', models.DateField(verbose_name='Date de fin prévue')),
                ('date_fin_reelle', models.DateField(blank=True, null=True, verbose_name='Date de fin réelle')),
                ('frais_scolarite', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Frais de scolarité')),
                ('statut_paiement', models.CharField(choices=[('PENDING', 'En attente'), ('PARTIAL', 'Partiel'), ('COMPLETE', 'Complet'), ('OVERDUE', 'En retard')], default='PENDING', max_length=20, verbose_name='Statut de paiement')),
                ('total_paye', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant total payé')),
                ('solde', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Solde restant')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('candidature', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inscription', to='enrollment.candidature', verbose_name='Candidature')),
                ('classe_assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inscriptions', to='academic.classe', verbose_name='Classe assignée')),
                ('cree_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('etudiant', models.ForeignKey(limit_choices_to={'role': 'APPRENANT'}, on_delete=django.db.models.deletion.CASCADE, related_name='inscriptions', to=settings.AUTH_USER_MODEL, verbose_name='Étudiant')),
            ],
            options={
                'verbose_name': 'Inscription',
                'verbose_name_plural': 'Inscriptions',
                'db_table': 'enrollment_inscription',
                'ordering': ['-date_inscription'],
            },
        ),
        migrations.CreateModel(
            name='HistoriqueInscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('type_action', models.CharField(choices=[('CREATION', 'Création'), ('CHANGEMENT_STATUT', 'Changement de statut'), ('CHANGEMENT_CLASSE', 'Changement de classe'), ('SUSPENSION', 'Suspension'), ('REACTIVATION', 'Réactivation'), ('TRANSFERT', 'Transfert'), ('ABANDON', 'Abandon'), ('DIPLOME', 'Diplômé'), ('EXCLUSION', 'Exclusion')], max_length=20, verbose_name="Type d'action")),
                ('ancienne_valeur', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ancienne valeur')),
                ('nouvelle_valeur', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nouvelle valeur')),
                ('motif', models.TextField(blank=True, null=True, verbose_name='Motif')),
                ('effectue_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Effectué par')),
                ('inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique', to='enrollment.inscription', verbose_name='Inscription')),
            ],
            options={
                'verbose_name': "Historique d'inscription",
                'verbose_name_plural': "Historiques d'inscriptions",
                'db_table': 'enrollment_historique',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Abandon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('date_abandon', models.DateField(verbose_name="Date d'abandon")),
                ('date_effet', models.DateField(verbose_name="Date d'effet")),
                ('type_abandon', models.CharField(choices=[('VOLONTAIRE', 'Volontaire'), ('ECHEC_ACADEMIQUE', 'Échec académique'), ('DIFFICULTES_FINANCIERES', 'Difficultés financières'), ('DISCIPLINAIRE', 'Disciplinaire'), ('RAISONS_MEDICALES', 'Raisons médicales'), ('TRANSFERT', 'Transfert'), ('AUTRE', 'Autre')], max_length=30, verbose_name="Type d'abandon")),
                ('motif', models.TextField(verbose_name='Motif détaillé')),
                ('eligible_remboursement', models.BooleanField(default=False, verbose_name='Éligible au remboursement')),
                ('montant_remboursable', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant remboursable')),
                ('remboursement_traite', models.BooleanField(default=False, verbose_name='Remboursement traité')),
                ('date_remboursement', models.DateField(blank=True, null=True, verbose_name='Date de remboursement')),
                ('documents_retournes', models.BooleanField(default=False, verbose_name='Documents retournés')),
                ('materiel_retourne', models.BooleanField(default=False, verbose_name='Matériel retourné')),
                ('traite_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Traité par')),
                ('inscription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='abandon', to='enrollment.inscription', verbose_name='Inscription')),
            ],
            options={
                'verbose_name': 'Abandon',
                'verbose_name_plural': 'Abandons',
                'db_table': 'enrollment_abandon',
                'ordering': ['-date_abandon'],
            },
        ),
        migrations.CreateModel(
            name='PeriodeCandidature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(verbose_name='Date de fin')),
                ('est_active', models.BooleanField(default=True, verbose_name='Active')),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.anneeacademique', verbose_name='Année académique')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='establishments.etablissement', verbose_name='Établissement')),
                ('filieres', models.ManyToManyField(to='academic.filiere', verbose_name='Filières concernées')),
            ],
            options={
                'verbose_name': 'Période de candidature',
                'verbose_name_plural': 'Périodes de candidature',
                'db_table': 'enrollment_periode_candidature',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='Transfert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('date_transfert', models.DateField(verbose_name='Date de transfert')),
                ('date_effet', models.DateField(verbose_name="Date d'effet")),
                ('motif', models.TextField(verbose_name='Motif du transfert')),
                ('statut', models.CharField(choices=[('PENDING', 'En attente'), ('APPROVED', 'Approuvé'), ('REJECTED', 'Rejeté'), ('COMPLETED', 'Terminé')], default='PENDING', max_length=20, verbose_name='Statut')),
                ('date_approbation', models.DateTimeField(blank=True, null=True, verbose_name="Date d'approbation")),
                ('notes_approbation', models.TextField(blank=True, null=True, verbose_name="Notes d'approbation")),
                ('approuve_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transferts_approuves', to=settings.AUTH_USER_MODEL, verbose_name='Approuvé par')),
                ('classe_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transferts_vers', to='academic.classe', verbose_name='Classe de destination')),
                ('classe_origine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transferts_depuis', to='academic.classe', verbose_name="Classe d'origine")),
                ('demande_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transferts_demandes', to=settings.AUTH_USER_MODEL, verbose_name='Demandé par')),
                ('inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transferts', to='enrollment.inscription', verbose_name='Inscription')),
            ],
            options={
                'verbose_name': 'Transfert',
                'verbose_name_plural': 'Transferts',
                'db_table': 'enrollment_transfert',
                'ordering': ['-date_transfert'],
            },
        ),
        migrations.AddIndex(
            model_name='candidature',
            index=models.Index(fields=['etablissement', 'statut'], name='enrollment__etablis_259019_idx'),
        ),
        migrations.AddIndex(
            model_name='candidature',
            index=models.Index(fields=['filiere', 'niveau', 'annee_academique'], name='enrollment__filiere_a981a6_idx'),
        ),
        migrations.AddIndex(
            model_name='candidature',
            index=models.Index(fields=['email', 'statut'], name='enrollment__email_ce4083_idx'),
        ),
        migrations.AddConstraint(
            model_name='candidature',
            constraint=models.UniqueConstraint(condition=models.Q(('statut__in', ['SOUMISE', 'EN_COURS_EXAMEN', 'APPROUVEE'])), fields=('email', 'etablissement', 'filiere', 'niveau', 'annee_academique'), name='unique_candidature_active'),
        ),
        migrations.AddIndex(
            model_name='inscription',
            index=models.Index(fields=['etudiant', 'statut'], name='enrollment__etudian_110f9c_idx'),
        ),
        migrations.AddIndex(
            model_name='inscription',
            index=models.Index(fields=['classe_assignee', 'statut'], name='enrollment__classe__8574a2_idx'),
        ),
    ]
